CREATE OR REPLACE PROCEDURE USP_HOCPHAN_ADD (
  P_MAHP IN VARCHAR2,
  P_TENHP IN VARCHAR2,
  P_SOTC IN INT,
  P_STLT IN INT,
  P_STTH IN INT,
  P_SOSVTD IN INT,
  P_MADV IN VARCHAR2,
  P_ErrCode OUT NUMBER
)
AS
BEGIN
  -- Insert with error handling
  INSERT INTO HOCPHAN
  VALUES (P_MAHP, P_TENHP,  P_SOTC, P_STLT, P_STTH, P_SOSVTD, P_MADV);
  
  -- Handle potential errors during insert
   P_ErrCode := 0;
  EXCEPTION
    WHEN OTHERS THEN
      P_ErrCode := 1; -- Set error code to 1
      RETURN; -- Terminate procedure
END;
/
GRANT EXECUTE ON USP_HOCPHAN_ADD TO RL_GIAOVU;
/
CREATE OR REPLACE PROCEDURE USP_HOCPHAN_GET_PROFILE_MAHP (P_MAHP IN VARCHAR2,P_RES OUT SYS_REFCURSOR)
AS
BEGIN
    OPEN P_RES FOR
        SELECT *
        FROM HOCPHAN
        WHERE MAHP = P_MAHP;
END;
/
GRANT EXECUTE ON USP_HOCPHAN_GET_PROFILE_MAHP TO RL_GIAOVU;
/
CREATE OR REPLACE PROCEDURE USP_HOCPHAN_UPDATE (
  P_MAHP IN VARCHAR2,
  P_TENHP IN VARCHAR2,
  P_SOTC IN INT,
  P_STLT IN INT,
  P_STTH IN INT,
  P_SOSVTD IN INT,
  P_MADV IN VARCHAR2,
  P_ErrCode OUT NUMBER
)
AS
BEGIN
  -- Insert with error handling
UPDATE HOCPHAN
SET 
    TENHP = P_TENHP,
    SOTC = P_SOTC,
    STLT = P_STLT,
    STTH = P_STTH,
    SOSVTD = P_SOSVTD,
    MADV = P_MADV
WHERE
    MAHP = P_MAHP;
  
  -- Handle potential errors during insert
   P_ErrCode := 0;
  EXCEPTION
    WHEN OTHERS THEN
      P_ErrCode := 1; -- Set error code to 1
      RETURN; -- Terminate procedure
END;
/
GRANT EXECUTE ON USP_HOCPHAN_UPDATE TO RL_GIAOVU;