CREATE OR REPLACE PROCEDURE USP_GVU_PHANCONG_GETALL(P_RES OUT SYS_REFCURSOR)
AUTHID DEFINER
AS
BEGIN
    OPEN P_RES FOR
WITH TMP AS
(SELECT MAHP AS MAHP FROM HOCPHAN WHERE MADV = (SELECT MADV FROM DONVI WHERE TENDV = N'Văn phòng khoa')),
TMP2 AS 
(SELECT MANV, HOTEN FROM NHANSU)
SELECT PC.MAGV,TMP2.HOTEN, PC.MAHP, H.TENHP ,PC.HK, PC.NAM, PC.MACT, 
NVL(TMP.MAHP, 'Không')
MAHP2
FROM PHANCONG PC LEFT JOIN TMP ON PC.MAHP = TMP.MAHP
JOIN HOCPHAN H ON PC.MAHP = H.MAHP JOIN TMP2 ON PC.MAGV = TMP2.MANV
ORDER BY PC.NAM DESC, PC.HK DESC, PC.MACT, PC.MAGV, PC.MAHP;
END;
/
GRANT EXECUTE ON USP_GVU_PHANCONG_GETALL TO PUBLIC;/
CREATE OR REPLACE PROCEDURE USP_GVU_PHANCONG_SEARCH(P_KEYWORD IN VARCHAR2, P_RES OUT SYS_REFCURSOR)
AUTHID DEFINER
AS
    V_KEYWORD VARCHAR2(100);
BEGIN
    V_KEYWORD := P_KEYWORD || '%';
    OPEN P_RES FOR
WITH TMP AS
(SELECT MAHP AS MAHP FROM HOCPHAN WHERE MADV = (SELECT MADV FROM DONVI WHERE TENDV = N'Văn phòng khoa')),
TMP2 AS 
(SELECT MANV, HOTEN FROM NHANSU)
SELECT PC.MAGV,TMP2.HOTEN, PC.MAHP, H.TENHP ,PC.HK, PC.NAM, PC.MACT, 
NVL(TMP.MAHP, 'Không')
MAHP2
FROM PHANCONG PC LEFT JOIN TMP ON PC.MAHP = TMP.MAHP
JOIN HOCPHAN H ON PC.MAHP = H.MAHP JOIN TMP2 ON PC.MAGV = TMP2.MANV
WHERE PC.MAGV LIKE V_KEYWORD
ORDER BY PC.NAM DESC, PC.HK DESC, PC.MACT, PC.MAGV, PC.MAHP;
END;
/
GRANT EXECUTE ON USP_GVU_PHANCONG_SEARCH TO PUBLIC;
/
CREATE OR REPLACE PROCEDURE USP_GVU_PHANCONG_UPDATE (
 P_MAGV IN VARCHAR2,
   P_MAGV2 IN VARCHAR2,
    P_MAHP2 IN VARCHAR2,
  P_HK2 IN INT,
  P_NAM2 IN INT,
  P_MACT2 IN VARCHAR2,
  P_ErrCode OUT NUMBER
)
AUTHID DEFINER
AS
v_count NUMBER := 0;
BEGIN
SELECT COUNT(*) INTO v_count FROM DANGKY WHERE MAGV = P_MAGV2 AND MAHP = CAST(P_MAHP2 as CHAR(10))  AND
    HK = P_HK2 AND
    NAM = P_NAM2 AND
    MACT = CAST(P_MACT2 as CHAR(5));
    P_ErrCode := v_count;
IF v_count > 0 THEN
    -- Set error code to 5 and return from the procedure
    P_ErrCode := 5;
    RETURN;
END IF;
UPDATE PHANCONG
SET 
    MAGV = P_MAGV
WHERE
    MAGV = P_MAGV2 AND
     MAHP = P_MAHP2 AND
    HK = P_HK2 AND
    NAM = P_NAM2 AND
    MACT = P_MACT2;
  -- Handle potential errors during insert
   P_ErrCode := 0;
  EXCEPTION
    WHEN OTHERS THEN
      P_ErrCode := 1; -- Set error code to 1
      RETURN; -- Terminate procedure
END; 
/
GRANT EXECUTE ON USP_GVU_PHANCONG_UPDATE TO RL_GIAOVU;
/
CREATE OR REPLACE PROCEDURE USP_GVU_PHANCONG_GET_ALL_MAGV(P_RES OUT SYS_REFCURSOR)
AUTHID DEFINER
AS
BEGIN
    OPEN P_RES FOR
        SELECT MANV AS MAGV
        FROM NHANSU;
END;
/
GRANT EXECUTE ON USP_GVU_PHANCONG_GET_ALL_MAGV TO PUBLIC;
/
CREATE OR REPLACE PROCEDURE USP_GVU_DONVI_GET_ALL_MAGV_HOTEN(P_RES OUT SYS_REFCURSOR)
AUTHID DEFINER
AS
BEGIN
    OPEN P_RES FOR
        SELECT MANV AS MAGV, HOTEN
        FROM NHANSU;
END;
/
GRANT EXECUTE ON USP_GVU_DONVI_GET_ALL_MAGV_HOTEN TO PUBLIC;
/
DROP TRIGGER GVU_DANGKY_PHANCONG_CHANGE ; 
