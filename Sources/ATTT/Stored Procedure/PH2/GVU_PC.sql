CREATE OR REPLACE PROCEDURE USP_GVU_PHANCONG_GETALL(P_RES OUT SYS_REFCURSOR)
AS
BEGIN
    OPEN P_RES FOR
WITH TMP AS
(SELECT MAHP AS MAHP FROM HOCPHAN WHERE MADV = (SELECT MADV FROM DONVI WHERE TENDV = N'Văn phòng khoa'))
SELECT PHANCONG.MAGV, PHANCONG.MAHP, PHANCONG.HK, PHANCONG.NAM, PHANCONG.MACT, 
NVL(TMP.MAHP, 'Không')
MAHP2
FROM PHANCONG LEFT JOIN TMP ON PHANCONG.MAHP = TMP.MAHP;
END;
/
GRANT EXECUTE ON USP_GVU_PHANCONG_GETALL TO PUBLIC;/
CREATE OR REPLACE PROCEDURE USP_GVU_PHANCONG_SEARCH(P_KEYWORD IN VARCHAR2, P_RES OUT SYS_REFCURSOR)
AS
    V_KEYWORD VARCHAR2(100);
BEGIN
    V_KEYWORD := P_KEYWORD || '%';
    OPEN P_RES FOR
        SELECT *
        FROM PHANCONG
        WHERE MAGV LIKE V_KEYWORD;
END;
/
GRANT EXECUTE ON USP_GVU_PHANCONG_SEARCH TO PUBLIC;
/
CREATE OR REPLACE PROCEDURE USP_GVU_PHANCONG_UPDATE (
 P_MAGV IN VARCHAR2,
  P_MAHP IN VARCHAR2,
  P_HK IN INT,
  P_NAM IN INT,
  P_MACT IN VARCHAR2,
   P_MAGV2 IN VARCHAR2,
    P_MAHP2 IN VARCHAR2,
  P_HK2 IN INT,
  P_NAM2 IN INT,
  P_MACT2 IN VARCHAR2,
  P_ErrCode OUT NUMBER
)
AS
BEGIN
  -- Insert with error handling
UPDATE PHANCONG
SET 
    MAGV = P_MAGV,
    MAHP = P_MAHP,
    HK = P_HK,
    NAM = P_NAM,
    MACT = P_MACT
WHERE
    MAGV = P_MAGV2 AND
     MAHP = P_MAHP2 AND
    HK = P_HK2 AND
    NAM = P_NAM2 AND
    MACT = P_MACT2;
  
  -- Handle potential errors during insert
   P_ErrCode := 0;
  EXCEPTION
    WHEN OTHERS THEN
      P_ErrCode := 1; -- Set error code to 1
      RETURN; -- Terminate procedure
END;
/
GRANT EXECUTE ON USP_GVU_PHANCONG_UPDATE TO RL_GIAOVU;